# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Command controller
    App\Controller\CommandController:
        arguments:
            - '@prooph_service_bus.user_command_bus'
            - '@prooph_service_bus.message_factory'
        tags: ['controller.service_arguments']

    # Event Controller (testing purpose)
    App\Controller\EventController:
        arguments:
            - '@prooph_service_bus.user_event_bus'
            - '@prooph_service_bus.message_factory'
        tags: ['controller.service_arguments']

    # Event Store Bridge
    prooph_event_store_bus_bridge.user_event_publisher:
        class: Prooph\EventStoreBusBridge\EventPublisher
        arguments: ['@prooph_service_bus.user_event_bus']
        public: true
        tags:
        - { name: 'prooph_event_store.user_store.plugin' }

    # Handler
    App\User\CommandHandler\RegisterUserHandler:
        arguments: ['@user_event_store']
        tags:
            - { name: 'prooph_service_bus.user_command_bus.route_target', message: App\User\Command\RegisterUser }

    App\User\CommandHandler\ChangeEmailHandler:
        arguments: ['@user_event_store']
        tags:
            - { name: 'prooph_service_bus.user_command_bus.route_target', message: App\User\Command\ChangeEmail }

    App\User\EventHandler\UserRegisteredHandler:
        tags:
            - { name: 'prooph_service_bus.user_event_bus.route_target', message: App\User\Event\UserRegistered }

    App\User\EventHandler\EmailChangedHandler:
      tags:
      - { name: 'prooph_service_bus.user_event_bus.route_target', message: App\User\Event\EmailChanged }

    # Projection
    user.projection.user_read_repository:
        class: 'App\User\Projection\UserReadModelRepo'
        arguments: ['@doctrine.dbal.default_connection']
        public: true
